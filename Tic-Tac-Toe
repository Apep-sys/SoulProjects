# Console level Tic-Tac-Toe game in Python
# Course assignment, hence it makes pre-determined steps.

lista_grid = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]


def alegere_player():
    signatura = 'x'
    while True:
        print("Alegeti pozitia precizand cifra liniei si a coloanei din grid ^_^")
        try:
            linie = int(input("Linia: "))
            coloana = int(input("Coloana: "))
        except ValueError:
            print("Nu ai introdus o cifra.\n")
            continue
        if linie > 3 or coloana > 3:
            print("\nNumarul maxim de linii si coloane este 3.\nIntroduceti valori mai mici sau egale cu 3.\n")
            continue
        x = verificare_optiune(linie, coloana)
        if x == 1:
            print("\nAceasta casuta este deja ocupata.\nAlegeti alta.\n")
            continue
        update_grid(linie, coloana, signatura)
        break


def alegere_computer():
    print('Se asteapta alegerea computerului...\n')
    signatura = '0'
    linie = 2
    coloana = 2
    y = verificare_optiune(linie, coloana)
    if y == 1:
        z = nr_impare()
        if z == 1:
            m = nr_pare()
            try:
                update_grid(m[0], m[1], signatura)
            except TypeError:
                print("Nevermind. E remiza.\n")
                return 2
        else:
            try:
                update_grid(z[0], z[1], signatura)
            except TypeError:
                print("Nevermind. E remiza.\n")
                return 2
    else:
        update_grid(linie, coloana, signatura)


def verificare_optiune(linie, coloana):
    if lista_grid[linie - 1][coloana - 1] == '0' or lista_grid[linie - 1][coloana - 1] == 'x':
        return 1
    else:
        return 0


def nr_impare():
    for linie, coloana in ([1, 1], [1, 3], [3, 1], [3, 3]):
        y = verificare_optiune(linie, coloana)
        if y == 0:
            return [linie, coloana]
    return y


def update_grid(linie, coloana, signatura):
    if signatura == 'x':
        lista_grid[linie - 1][coloana - 1] = 'x'
    else:
        lista_grid[linie - 1][coloana - 1] = '0'
    coloana = 0
    for i in range(0, 3):
        while coloana < 3:
            x = '| ' + lista_grid[i][coloana] + ' |'
            print(x, end='')
            coloana += 1
        print('\n')
        coloana = 0


def nr_pare():
    for linie, coloana in ([1, 2], [2, 1], [2, 3], [3, 2]):
        y = verificare_optiune(linie, coloana)
        if y == 0:
            return [linie, coloana]


def win_condition():
    player = 0
    comp = 0
    x = linii()
    if x == 1:
        return 1
    else:
        x = coloane()
        if x == 1:
            return 1
    for x, y in [[0, 0], [1, 1], [2, 2]]:
        if lista_grid[x][y] == 'x':
            player += 1
        if lista_grid[x][y] == '0':
            comp += 1
    x = verificare_win(player, comp)
    if x == 1:
        return 1
    player = 0
    comp = 0
    for x, y in [[0, 2], [1, 1], [2, 0]]:
        if lista_grid[x][y] == 'x':
            player += 1
        if lista_grid[x][y] == '0':
            comp += 1
    x = verificare_win(player, comp)
    if x == 1:
        return 1


def verificare_win(player, comp):
    if player == 3:
        print("Game over. You won.")
        return 1
    elif comp == 3:
        print("Game over. You lost.")
        return 1


def linii():
    j = 0
    player = 0
    comp = 0
    for i in range(0, 3):
        while j <= 2:
            if lista_grid[i][j] == 'x':
                player += 1
            if lista_grid[i][j] == '0':
                comp += 1
            j += 1
        x = verificare_win(player, comp)
        if x == 1:
            return 1
        player = 0
        comp = 0


def coloane():
    i = 0
    player = 0
    comp = 0
    for j in range(0, 3):
        while i <= 2:
            if lista_grid[i][j] == 'x':
                player += 1
            if lista_grid[i][j] == '0':
                comp += 1
            i += 1
        x = verificare_win(player, comp)
        if x == 1:
            return 1
        player = 0
        comp = 0


def play_game():
    coloana = 0
    for i in range(0, 3):
        while coloana < 3:
            x = '| ' + lista_grid[i][coloana] + ' |'
            print(x, end='')
            coloana += 1
        print('\n')
        coloana = 0
    while True:
        x = win_condition()
        if x == 1:
            break
        alegere_player()
        x = win_condition()
        if x == 1:
            break
        x = alegere_computer()
        if x == 2:
            break


x = play_game()
if x == 1:
    lista_grid = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]
    play_game()

answer = input('Vrei sa joci din nou ? Y/N\n').title()
if answer == 'Y':
    lista_grid = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]
    play_game()
else:
    pass
